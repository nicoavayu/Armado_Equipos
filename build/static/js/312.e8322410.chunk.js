"use strict";(self.webpackChunkteam_balancer=self.webpackChunkteam_balancer||[]).push([[312],{312:(e,a,t)=>{t.r(a),t.d(a,{Geolocation:()=>o,GeolocationWeb:()=>i});var n=t(403);class i extends n.E_{async getCurrentPosition(e){return new Promise((a,t)=>{navigator.geolocation.getCurrentPosition(e=>{a(e)},e=>{t(e)},Object.assign({enableHighAccuracy:!1,timeout:1e4,maximumAge:0},e))})}async watchPosition(e,a){const t=navigator.geolocation.watchPosition(e=>{a(e)},e=>{a(null,e)},Object.assign({enableHighAccuracy:!1,timeout:1e4,maximumAge:0,minimumUpdateInterval:5e3},e));return"".concat(t)}async clearWatch(e){navigator.geolocation.clearWatch(parseInt(e.id,10))}async checkPermissions(){if("undefined"===typeof navigator||!navigator.permissions)throw this.unavailable("Permissions API not available in this browser");const e=await navigator.permissions.query({name:"geolocation"});return{location:e.state,coarseLocation:e.state}}async requestPermissions(){throw this.unimplemented("Not implemented on web.")}}const o=new i}}]);
//# sourceMappingURL=312.e8322410.chunk.js.map